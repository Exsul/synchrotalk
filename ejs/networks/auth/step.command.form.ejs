<%
function info(f)
{
%>
  <div class="ui info message">
    <%@ f.text %>
  </div>
<%
}

function field(f)
{
%>
  <h4 class='ui header'><%@ f.title || f.name %></h4>
<%
  if (f.description)
    info(f.description);
%>
  <div class='ui input'>
    <input name="<%@ f.name %>" placeholder="<%@ f.placeholder || f.name %>" type="<%@ f.type != 'field' ? f.type : '' %>" >
  </div>
<%
}

function section(f)
{
%>
  <h4 class="ui dividing header"><%@ f.text %></h4>
<%
}

%>
<div class="ui form content">
<%
for (var i = 0; i < __this.length; i++)
  switch (__this[i].type)
  {
  case 'field':
  case 'password':
    field(__this[i]);
    break;
  case 'section':
    section(__this[i]);
    break;
  case 'info':
    info(__this[i]);
    break;
  default:
    alert("Unsupported markdown " + __this[i].type);
  }
%>
</div>
<%

// Extract just rendered data
var markup = __this.escape().Render();
// Clear rendered screen
__this.escape().DrawTo();

__this.CascadeDesign('utils/modal/abstract',
  [
    'networks/auth/step.command.form.bone',
    markup
  ])

__this.DeferCascade(function()
{
  __this.first().on('modal.close', function()
  {
    var data = {};
    __this.first().find('input').each(function()
    {
      data[$(this).attr('name')] = $(this).val();
    });

    __this.first().next().before(phoxy.DeferRender('networks/auth/step.complete',
      {
        requirements: data
      }));
  });
});
%>
<form></form>
