<%

var url = __this.url;
delete __this.url;

function resolve_candidates()
{
  var first = __this.first();

  if (first.hasClass('fluid'))
    first = first.parent();

  // For elements with negative width
  var minimal_acceptable_width = 10;
  var minimal_acceptable_height = 0;


  while (first.width() < minimal_acceptable_width
    || first.height() < minimal_acceptable_height)
    first = first.parent();

  var container =
  {
    width: first.width(),
    height: first.height(),
  };

  url.sort(function (a, b)
  {
    if (a.width != b.width)
      return a.width - b.width;

    return a.height - b.height;
  });

  for (var k in url)
  {
    var candidate = url[k];

    if (candidate.width < container.width ||
      candidate.height < container.height)
      continue;

    return this.SetUrl(candidate.url);
  }

  // We do not match container requirements. Attach highest resolution
  this.SetUrl(url.pop().url);
}

__this.CascadeDesign('utils/image/abstract', __this, resolve_candidates);

%>
